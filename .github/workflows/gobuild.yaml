# ./.github/workflows/build.yml

name: GO_Build

on:
  workflow_call:

  push:
    branches-ignore:
    - main

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: Lint Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up GO
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          check-latest: true

      - name: Lint GO Code
        uses: golangci/golangci-lint-action@v3.2.0
        with:
          version: latest

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up GO
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          stable: true
          check-latest: true
      - name: Run Test
        run: go test -v -cover ./...

  build:
    name: Build Binary 1st Stage
    runs-on: ubuntu-latest
    needs: [test]
    strategy:
      matrix:
        goosarch:
          - 'linux/amd64'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up GO
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          stable: true
          check-latest: true

      - name: Get OS and arch info
        run: |
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          BINARY_NAME=${{github.repository}}-$GOOS-$GOARCH
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
          echo "CGO_ENABLED=0" >> $GITHUB_ENV

      - name: Build
        run: |
          go build -o "$BINARY_NAME" -v main.go
