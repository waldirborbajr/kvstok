# ./.github/workflows/build-deploy.yml

name: GO_Build-Full

on:
  push:
    branches:
    - main
    - staging
    - develop
  pull_request:
    branches:
    - main
    - staging
    - develop

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  use-build:
    # adapt to point to the current repo
    # https://docs.github.com/en/actions/learn-github-actions/reusing-workflows#calling-a-reusable-workflow
    uses: waldirborbajr/temp/.github/workflows/gobuild.yaml@main
    # that's all - jobs that call a reusable workflow can do nothing else

  build:
    name: Pre Deploy - Binaries Build
    needs: [use-build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goosarch:
          - 'linux/386'
          - 'linux/amd64'
          - 'linux/arm'
          - 'linux/arm64'
          - 'darwin/amd64'
          - 'darwin/arm64'
          - 'windows/386'
          - 'windows/amd64'
          # - 'aix/ppc64'
          # - 'android/386'
          # - 'android/amd64'
          # - 'android/arm'
          # - 'android/arm64'
          # - 'dragonfly/amd64'
          # - 'freebsd/386'
          # - 'freebsd/amd64'
          # - 'freebsd/arm'
          # - 'freebsd/arm64'
          # - 'illumos/amd64'
          # - 'ios/amd64'
          # - 'ios/arm64'
          # - 'js/wasm'
          # - 'linux/mips'
          # - 'linux/mips64'
          # - 'linux/mips64le'
          # - 'linux/mipsle'
          # - 'linux/ppc64'
          # - 'linux/ppc64le'
          # - 'linux/riscv64'
          # - 'linux/s390x'
          # - 'netbsd/386'
          # - 'netbsd/amd64'
          # - 'netbsd/arm'
          # - 'netbsd/arm64'
          # - 'openbsd/386'
          # - 'openbsd/amd64'
          # - 'openbsd/arm'
          # - 'openbsd/arm64'
          # - 'openbsd/mips64'
          # - 'plan9/386'
          # - 'plan9/amd64'
          # - 'plan9/arm'
          # - 'solaris/amd64'
          # - 'windows/arm'
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up GO
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          stable: true
          check-latest: true
      - name: Get OS and arch info
        run: |
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          BINARY_NAME=${{github.repository}}-$GOOS-$GOARCH
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
          echo "CGO_ENABLED=0" >> $GITHUB_ENV
      - name: Build
        run: |
          go build -o "$BINARY_NAME" -v main.go
